%{
    #define YYSTYPE int             /* type van yylval variable */
    extern int yylex();             /* generated by flex in .l file */
    extern int yyerror(char *);     /* called on error, can be overridden */
    #include "hash.h"
%}

%token  HEX
%token  REG

%right '~' '&' '^' '|'
 /* prioriteit van laag naar hoog */


%%
input :   /* lege input */  { }
        | input command     { }                         /* parse lijn en zoek command, alles voor command is terug input */
;
command :  '\n'             { }                         /* command is gewoon een enter, doe niets */
        | assignment '\n'   { }                         /* assignment gevolgd door enter */
        | expr '\n'         { printf("-> 0x%x\n", $1); }  /* expr gevolgd door enter */
;

assignment : REG '=' expr    { $$ = $1; 
                            ht_update($1, $3); } 
;

expr : REG                 { $$ = tabel[$1].waarde; } 
     | HEX                 { $$ = $1; } 
     | expr '&' expr       { $$ = $1 & $3; } 
     | expr '^' expr       { $$ = $1 ^ $3; } 
     | expr '|' expr       { $$ = $1 | $3; } 
     | '~' expr            { $$ = ~$2; }  
;
%%

int main(int argc,char *argv[]) {
    ht_init();
    yyparse();
    ht_print();
    return 0;
}


